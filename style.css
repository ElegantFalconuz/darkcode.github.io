/* root variables */
:root {
  --bg: #0f0f0f;
  --bg-alt: #181818;
  --text: #e8e8e8;
  --accent: #8a2be2;
  --accent-hover: #a560ff;
  --radius: 6px;
  --timing: 0.25s;
  --font-main: "Inter", system-ui, sans-serif;
}

/* light mode toggle could be added later */
@media (prefers-color-scheme: light) {
  :root {
    --bg: #ffffff;
    --bg-alt: #f6f6f6;
    --text: #202020;
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  margin: 0;
  font-family: var(--font-main);
  color: var(--text);
  background: var(--bg);
  line-height: 1.6;
}

/* Utilities */
.container {
  width: min(90%, 1024px);
  margin-inline: auto;
}

.btn,
.btn--small {
  display: inline-block;
  padding: 0.75rem 1.5rem;
  background: var(--accent);
  color: #fff;
  border: none;
  border-radius: var(--radius);
  text-decoration: none;
  transition: background var(--timing);
}

.btn--small {
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
}

.btn:hover,
.btn:focus {
  background: var(--accent-hover);
}

/* Header */
.header {
  position: sticky;
  top: 0;
  backdrop-filter: blur(6px);
  background: rgba(15, 15, 15, 0.8);
  z-index: 100;
}

.header__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-block: 0.75rem;
}

.logo {
  color: var(--accent);
  font-weight: 600;
  text-decoration: none;
  font-size: 1.25rem;
}

.burger {
  background: none;
  border: 0;
  display: flex;
  flex-direction: column;
  gap: 4px;
  cursor: pointer;
}

.burger__line {
  width: 24px;
  height: 2px;
  background: var(--text);
  transition: transform var(--timing);
}

.nav {
  position: fixed;
  inset: 0 0 0 50%;
  background: var(--bg);
  transform: translateX(100%);
  transition: transform var(--timing);
  padding-top: 5rem;
}

.nav__list {
  list-style: none;
  padding: 0;
  margin: 0;
  display: grid;
  gap: 1.5rem;
  text-align: center;
}

.nav__list a {
  color: var(--text);
  text-decoration: none;
  font-size: 1.125rem;
}

.nav--open {
  transform: translateX(0);
}

.burger[aria-expanded="true"] .burger__line:nth-child(1) {
  transform: translateY(6px) rotate(45deg);
}
.burger[aria-expanded="true"] .burger__line:nth-child(2) {
  opacity: 0;
}
.burger[aria-expanded="true"] .burger__line:nth-child(3) {
  transform: translateY(-6px) rotate(-45deg);
}

/* Sections */
.hero {
  display: grid;
  place-items: center;
  text-align: center;
  min-height: 80vh;
  background: url("assets/hero-bg.webp") center/cover no-repeat;
}

.hero__content h1 {
  font-size: clamp(2.25rem, 5vw + 1rem, 4rem);
  margin: 0 0 0.5rem;
}

.about {
  background: var(--bg-alt);
  padding-block: 4rem;
}

.two-col {
  display: grid;
  gap: 2rem;
  align-items: center;
}

.about__img {
  width: 100%;
  max-width: 320px;
  border-radius: var(--radius);
}

.projects {
  padding-block: 4rem;
}

.grid {
  display: grid;
  gap: 2rem;
}

.card {
  background: var(--bg-alt);
  border-radius: var(--radius);
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.card img {
  object-fit: cover;
  width: 100%;
  height: 180px;
}

.card h3 {
  margin: 1rem;
}

.card p {
  margin: 0 1rem 1rem;
  flex-grow: 1;
}

.card .btn--small {
  margin: 0 1rem 1.5rem;
  align-self: flex-start;
}

.contact {
  background: var(--bg-alt);
  padding-block: 4rem;
}

.contact__form {
  display: grid;
  gap: 1.5rem;
}

.contact__form input,
.contact__form textarea {
  width: 100%;
  padding: 0.75rem;
  background: var(--bg);
  border: 1px solid #333;
  border-radius: var(--radius);
  color: var(--text);
  font-family: inherit;
  resize: vertical;
}

/* Footer */
.footer {
  padding: 1rem 0;
  background: #000;
  text-align: center;
  font-size: 0.875rem;
}

.footer a {
  color: var(--accent);
  margin-left: 0.5rem;
}

/* Larger breakpoints */
@media (min-width: 768px) {
  .nav {
    position: static;
    transform: none !important;
    padding: 0;
    display: block;
    background: transparent;
  }

  .burger {
    display: none;
  }

  .nav__list {
    grid-auto-flow: column;
    gap: 2rem;
  }

  .two-col {
    grid-template-columns: 1fr 1fr;
  }

  .grid {
    grid-template-columns: repeat(3, 1fr);
  }
}